Question 3
When processing files exceptions must be handled. Other classes that we have encountered (e.g. Scanner) throw exceptions, but we can choose not to handle those exceptions. Likewise, for dereferencing of objects (null pointer exceptions) and array access (out of bounds exceptions). Why is this so?
(Hint: remember this question from COIT20245? In your answer discuss the “Catch or Specify Requirement” and the three categories of “exceptions” (“checked”, “error” and “runtime”).)


Customer c1;

if (c1.getName().lenght() > 0)


** Checked
You must handle the exceptions - somewhere in the method or somewhere in the call stack (if method has a throws ...) - or your code wont compile.
File I/O, Network I/O, Database I/O, etc

** Unchecked / Error
Everyhing else

** Runtime
Generally errors inside the Java Virtual Machine - bugs, etc.
Or can be heap / stack / out of memory errors as well if you are using lots of memory with 32 bit Java.
try ... catch cannot handle these errors.
